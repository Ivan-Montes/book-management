
name: book-mgmt-hex-imperative-react

services:

  book-mgmt-hex-imperative-react-write-db:
    image: mongo:8.0.3-noble
    container_name: book-mgmt-hex-imperative-react-write-db
    environment:
      MONGO_INITDB_DATABASE: book_write_db
      MONGO_INITDB_ROOT_USERNAME: sa
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASS_WRITE}
    networks:
      - book-mgmt-hex-imperative-react-net
    ports:
      - 27017:27017 
    restart: on-failure:3
    healthcheck:
      test: "echo 'db.runCommand(\"ping\").ok'"
      interval: 5s
      timeout: 5s
      retries: 3

  kafka:
    image: bitnami/kafka:3.8
    container_name: kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_KRAFT_CLUSTER_ID=jujutsu-kafka
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,EXTERNAL://kafka:29092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes    
      - KAFKA_AUTO_OFFSET_RESET=earliest       
      - BITNAMI_DEBUG=true        
#    volumes:
#      - kafka_persistent:/var/lib/kafka
    networks:
      - book-mgmt-hex-imperative-react-net
    ports:
      - 9092:9092
      - 9093:9093
      - 29092:29092
    restart: on-failure:3
    healthcheck:
      test: "bash -c 'printf \"\" > /dev/tcp/127.0.0.1/9092; exit $$?;'"
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  book-mgmt-hex-imperative-react-net:
    name: book-mgmt-hex-imperative-react-net
    ipam:
       config:
       - subnet: 172.26.33.0/24
         gateway: 172.26.33.1

